#!/usr/bin/env python'''name: 字典与集合 author: li zhangdate: 2019/9/2'''# 散列表是字典出众的根本原因# 集合 字典 set  首先需要理解散列表# 本书中的父类也称作为超类# instance 用来判断数据类型是不是某个广义的数据类型from collections import abcmy_dict = {}flag = isinstance(my_dict, abc.Mapping)print(flag)# 标准库里所有的映射类型都是dict实现的，怎么理解这句话的意思# 简单来说，不可变的数据类型都是可以散列的，不完全准确，元祖有可能是其他数据类型的引用# 常用的新建字典的方法a = {'one':1, 'two':2, 'three':3}b = dict({'one':1, 'two':2, 'three':3})c = dict([('one',1), ('two', 2), ('three', 3)])d = dict(zip(['one', 'two', 'three'], [1, 2, 3]))print(a, b, c, d)print(a==b==c==d)# 字典推导