#!/usr/bin/env python'''name: 01_闭包 author: li zhangdate: 2019/10/8'''def func(): # 外部函数    a = 1 # 外部函数作用域中的变量    print('this is a func')    def func1(num): # 内部函数        print('this is a func1')        print(num+a)    return func1func() # 运行外部函数，内部函数被创建# 函数内部的变量都是有生命周期的，生命周期在函数调用的时候存活var = func()var(3)# 闭包：内部函数对外部函数作用域中变量的引用# 所以func1是闭包mylist = [1, 2, 3, 4]def func(obj):    print('func:', obj)    def func1():        obj[0] += 1        print('func1', obj)    return func1var = func(mylist)var()import sysprint(sys.getdefaultencoding())