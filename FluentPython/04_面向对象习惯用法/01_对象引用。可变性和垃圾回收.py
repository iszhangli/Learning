#!/usr/bin/env python'''name: 01_对象引用。可变性和垃圾回收 author: li zhangdate: 2019/9/23'''# 每个变量都有标识，类型和值，对象一旦创建，标识绝不会变，可以理解为对象在内存中的地址# is运算符比较两个对象的标识，id()函数返回对象标识的整数表示# 8.2.1 在 == 和 is 之间选择# == 运算符比较两个对象的值，而is比较对象的标识# 最常用is检查变量绑定的值是不是none# 8.2.2 元祖的相对不可变性# 元祖保存的是对象的引用，如果引用的元素可变，即便元祖本身不可变，元素依然可变# 元祖的不可变性指的是tuple数据结构的物理内容不可变# str bytes array.array 等单一类型是扁平的，保存的不是引用，t1 = (1, 2, [30, 40])t2 = (1, 2, [30, 40])print(t1 == t2)# Trueprint(id(t1[-1]))# 4302515784t1[-1].append(99)print(t1)# (1, 2, [30, 40, 99])print(id(t1[-1]))# 4302515784print(t1 == t2)# False# 8.3 默认做浅复制（副本共享内部对象 的引用）# 浅复制 指向同一个列表对象，指向的元素也相同，但是在做运算的时候可能会发生意向不到的错误class Bus:    def __init__(self, passengers=None):        if passengers is None:            self.passengers = []        else:            self.passengers = list(passengers)    def pick(self, name):        self.passengers.append(name)    def drop(self, name):        self.passengers.remove(name)import copybus1 = Bus(['Alice', 'Bill', 'Claire', 'David'])bus2 = copy.copy(bus1)bus3 = copy.deepcopy(bus1)print(id(bus1), id(bus2), id(bus3))bus1.drop('Bill')a = [10,20]b = [a, 30]print(b)# 8.4 函数的参数作为引用时# python唯一支持的参数传递模式就是共享传参# 共享传参指函数的各个形式参数获取实参中各个引用的副本print("'")