# !/usr/bin/env python# -*- coding:utf-8 -*-# name: 1.python文化中的接口和协议 # author: li zhang# date: 2019/11/15# 鸭子类型和协议# 抽象基类# 类的接口：继承的公开属性# 接口：对象开发方法的子集，让对象在系统中扮演特定的角色# 序列协议， 协议就是实现的特定功能的一种实现方式# 序列协议: 协议协议，就是实现某个功能的约定，常规操作模式为调用已经实现的魔术方法class Foo:    def __getitem__(self, item):  # 这使得Foo看起来像是序列        return range(1,30,10)[item]f = Foo()print(f[1])# 使用猴子补丁在运行时实现协议# 如果准守既定协议，很有可能增加利用现有的标准库和第三方代码的可能性，这得益于鸭子类型# 抽象基类的本质就是几个特殊的方法class Struggle:    def __len__(self): return 23from collections import abcisinstance(Struggle(), abc)# 内置类型的方法不会调用用户定义的类覆盖的特殊方法